/* BEGIN_HEADER */
#include "mbedtls/ecdsa.h"
/* END_HEADER */

/* BEGIN_DEPENDENCIES
 * depends_on:MBEDTLS_ECDSA_C
 * END_DEPENDENCIES
 */

/* BEGIN_CASE */
void ecdsa_prim_random( int id )
{
	
    TEST_ASSERT(board_ecdsa_prim_random( id ) == EXIT_SUCCESS);

exit:
	asm("nop");
}
/* END_CASE */

/* BEGIN_CASE */
void ecdsa_prim_test_vectors( int id, char * d_str, char * xQ_str,
                              char * yQ_str, data_t * rnd_buf,
                              data_t * hash, char * r_str, char * s_str,
                              int board_result )
{

    TEST_ASSERT(board_ecdsa_prim_test_vectors( id, d_str, xQ_str, yQ_str, rnd_buf, hash, r_str, s_str, board_result ) == EXIT_SUCCESS);

exit:
    asm("nop");
}
/* END_CASE */

/* BEGIN_CASE depends_on:MBEDTLS_ECDSA_DETERMINISTIC */
void ecdsa_det_test_vectors( int id, char * d_str, int md_alg, char * msg,
                             char * r_str, char * s_str )
{
	
    TEST_ASSERT(board_ecdsa_det_test_vectors( id, d_str, md_alg, msg, r_str, s_str ) == EXIT_SUCCESS);

exit:
    asm("nop");
}
/* END_CASE */

/* BEGIN_CASE depends_on:MBEDTLS_SHA256_C */
void ecdsa_write_read_random( int id )
{

    TEST_ASSERT(board_ecdsa_write_read_random( id ) == EXIT_SUCCESS);
	
exit:
    asm("nop");
}
/* END_CASE */

