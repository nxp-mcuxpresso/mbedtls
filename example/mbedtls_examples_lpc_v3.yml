# yaml-language-server: $schema=../../../../../../../../bin/generator/sdk_generator/data/sdk_data_schema/v3/software_set_and_project_schema.json

__hierarchy__:
  tmp_mbedtls_examples_lpc_settings:
    section-type: application
    belong_to:
      kex_package: set.board.${board}
      cmsis_pack: set.board.${board}.mbedtls
    dependency:
    - driver.common
    - driver.clock
    - driver.power
    - driver.power_no_lib
    - driver.reset
    contents:
      configuration:
        tools:
          __common__:
            config:
              __common__: {}
              debug:
                cc-define:
                  DEBUG: 
                cx-define:
                  DEBUG: 
          iar:
            config:
              __common__: 
              release: {}
          mdk:
            config:
              release: {}
      modules:
        boardset:
          required: true
          cc-include:
          - path: boards/${board}
            package_path: project-root-path
            project_path: board
          files:
          - source: boards/${board}/board.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/board.h
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/clock_config.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/clock_config.h
            package_path: project-root-path
            project_path: board
        device_configuration_data:
          required: false
          cc-include:
          - path: boards/${board}
            package_path: project-root-path
            project_path: board
          files:
          - source: boards/${board}/dcd.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/dcd.h
            package_path: project-root-path
            project_path: board
        readme:
          files:
          - source: project-root-path/readme.txt
            toolchains: iar mdk mcux armgcc
            project_path: doc
mbedtls_selftest:
  section-type: application
  belong_to:
    kex_package: set.board.${board}
    cmsis_pack: set.board.${board}.mbedtls
  dependency:
  - middleware.mbedtls
  - driver.lpc_iocon
  merge_segment:
  - middleware.mbedtls.default_heap_stack
  contents:
    document:
      name: mbedtls_selftest
      readme:
      - boards/${board}/mbedtls_examples/mbedtls_selftest/board.readme
      - middleware/mbedtls/example/mbedtls_selftest/mbedtls_selftest.readme
      category: mbedtls_examples
      brief: The mbdedTLS SelfTest program performs cryptographic algorithm testing
        and prints results to the terminal.
    project-root-path: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__:
              cc-define:
                PRINTF_ADVANCED_ENABLE: 1
                PRINTF_FLOAT_ENABLE: 1
                FREESCALE_KSDK_BM: 
                MBEDTLS_CONFIG_FILE: '"ksdk_mbedtls_config.h"'
    modules:
      demo:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_selftest
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}
          project_path: board
        files:
        - source: middleware/mbedtls/example/mbedtls_selftest/selftest.c
          merge-to-main: main
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}
          project_path: source
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest/pin_mux.c
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}
          project_path: board
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest/pin_mux.h
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}
          project_path: board
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}
          project_path: "${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}"
        files:
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}"
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_selftest/${multicore_foldername}"
mbedtls_selftest_thread:
  section-type: application
  belong_to:
    kex_package: set.board.${board}
    cmsis_pack: set.board.${board}.mbedtls
  dependency:
  - driver.lpc_iocon
  - middleware.mbedtls
  - driver.clock 
  - middleware.freertos-kernel.heap_4
  merge_segment:
  - middleware.mbedtls.default_heap_stack
  contents:
    document:
      name: mbedtls_selftest_thread
      readme:
      - boards/${board}/mbedtls_examples/mbedtls_selftest_thread/board.readme
      - middleware/mbedtls/example/mbedtls_selftest_thread/mbedtls_selftest_thread.readme
      category: mbedtls_examples
      brief: The mbedTLS SelfTest Thread program contains two threads that performs cryptographic algorithm testing
        and prints results to the terminal in parallel.
    project-root-path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__:
              cc-define:
                FREESCALE_KSDK_BM:
                MBEDTLS_CONFIG_FILE: '"ksdk_mbedtls_config.h"'   
    modules:
      demo:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: board
        files:
        - source: middleware/mbedtls/example/mbedtls_selftest_thread/selftest.c
          merge-to-main: main
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: source
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/pin_mux.c
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: board
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/pin_mux.h
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: board
      freertos_config:
        required: true
        cc-include:
        - path: boards/${board}
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: source
        - path: middleware/mbedtls/example/mbedtls_examples/mbedtls_selftest_thread
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: source
        as-include:
        - path: middleware/mbedtls/example/mbedtls_examples/mbedtls_selftest_thread
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: source
        - path: boards/${board}
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: source
        files:
        - source: middleware/mbedtls/example/mbedtls_selftest_thread/FreeRTOSConfig.h
          merge-to-freertosconfig: main
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: source
        - source: boards/${board}/FreeRTOSConfigBoard.h
          merge-to-freertosconfig: sub
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/multicore_foldername}
          project_path: source
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}
          project_path: "${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}"
        files:
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}"
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_selftest_thread/${multicore_foldername}"
mbedtls_selftest_css:
  section-type: application
  belong_to:
    kex_package: set.board.${board}
    cmsis_pack: set.board.${board}.mbedtls
  dependency:
  - middleware.mbedtls
  - driver.lpc_iocon
  merge_segment:
  - middleware.mbedtls.default_heap_stack
  contents:
    document:
      name: mbedtls_selftest_css
      readme:
      - boards/${board}/mbedtls_examples/mbedtls_selftest_css/board.readme
      - middleware/mbedtls/example/mbedtls_selftest_css/mbedtls_selftest.readme
      category: mbedtls_examples
      brief: The mbdedTLS SelfTest program performs cryptographic algorithm testing
        and prints results to the terminal.
    project-root-path: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__:
              cc-define:
                FREESCALE_KSDK_BM: 
                MBEDTLS_CONFIG_FILE: '"ksdk_mbedtls_config.h"'
    modules:
      demo:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_selftest_css
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}
          project_path: board
        files:
        - source: middleware/mbedtls/example/mbedtls_selftest_css/selftest.c
          merge-to-main: main
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}
          project_path: source
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_css/pin_mux.c
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}
          project_path: board
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_css/pin_mux.h
          package_path: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}
          project_path: board
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}
          project_path: "${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}"
        files:
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}"
        - source: boards/${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_selftest_css/${multicore_foldername}"
mbedtls_benchmark:
  section-type: application
  belong_to:
    kex_package: set.board.${board}
    cmsis_pack: set.board.${board}.mbedtls
  dependency:
  - middleware.mbedtls
  - driver.lpc_iocon
  merge_segment:
  - middleware.mbedtls.default_heap_stack
  contents:
    document:
      name: mbedtls_benchmark
      readme:
      - boards/${board}/mbedtls_examples/mbedtls_benchmark/board.readme
      - middleware/mbedtls/example/mbedtls_benchmark/mbedtls_benchmark.readme
      category: mbedtls_examples
      brief: The mbdedTLS Benchmark demo application performs cryptographic algorithm
        benchmarking and prints results to the terminal.
    project-root-path: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__:
              cc-define:
                PRINTF_ADVANCED_ENABLE: 1
                PRINTF_FLOAT_ENABLE: 1
                FREESCALE_KSDK_BM: 
                MBEDTLS_CONFIG_FILE: '"ksdk_mbedtls_config.h"'
        armgcc:
          config:
            __common__:
              cc-flags:
              - "-fno-strict-aliasing"
    modules:
      demo:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_benchmark
          package_path: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}
          project_path: board
        files:
        - source: middleware/mbedtls/example/mbedtls_benchmark/benchmark.c
          merge-to-main: main
          package_path: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}
          project_path: source
        - source: boards/${board}/mbedtls_examples/mbedtls_benchmark/pin_mux.c
          package_path: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}
          project_path: board
        - source: boards/${board}/mbedtls_examples/mbedtls_benchmark/pin_mux.h
          package_path: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}
          project_path: board
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}
          project_path: "${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}"
        files:
        - source: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}"
        - source: boards/${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/mbedtls_examples/mbedtls_benchmark/${multicore_foldername}"